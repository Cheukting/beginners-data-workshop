{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":84385792},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.9"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1588986151178,"id":"10b5ab","input":"name = input('What is your name? ')\n\nif len(name) > 6:\n    print('You have a long name.')\nelse:\n    print('You have a short name.')","kernel":"python3","pos":25,"start":1588986145667,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"16ae2e","input":"","pos":52,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1f8be7","input":"","pos":59,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"3caf31","input":"","pos":58,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"3ffb02","input":"list_greeting = ['Hallo', 'Bonjour', 'Ola', 'Hello', 'Ciao', 'Ave']\n\ndef is_greeting(s):\n    \"\"\"Returns True if s is in list_greeting, else False\"\"\"\n    if s in list_greeting:\n        return True\n    else:\n        return False ","pos":47,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"640d1f","input":"is_greeting('Yo')","pos":50,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"7143f3","input":"is_greeting('Ola')","pos":49,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"735eac","input":"# %load ../solutions/04_03.py","pos":14,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"7bbd21","input":"","pos":60,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"83ae8c","input":"","pos":57,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"85e94b","input":"","pos":51,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"91c71c","input":"","pos":7,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b59d5d","input":"# %load ../solutions/04_02.py","pos":11,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"be4cd5","input":"","pos":53,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c5d5de","input":"","pos":13,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"d02ddd","input":"","pos":10,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ea79ac","input":"# %load ../solutions/04_01.py","pos":8,"state":"done","type":"cell"}
{"cell_type":"code","id":"3bd93b","input":"dict_greeting   # there is no order in a dictionary","pos":5,"state":"done","type":"cell"}
{"cell_type":"code","id":"9477c9","input":"dict_greeting = {'Namibia':'Hallo', 'France':'Bonjour', 'Spain':'Ola', 'UK':'Hello', 'Italy':'Ciao'}","pos":4,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"03d021","input":"**Keys are immutables (i.e. can't be changed) but values can be updated.**  \n>Replace the UK greeting with 'Good Morning'.  \n>Print the dictionary.","pos":9,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"14cce7","input":">Write an ***If - Elif - Else*** statement printing 'Python' if x is positif, else 'sunshine' if y is equal to 2, else 'data' if z is a multiple of 3, else 'Why?'.   \nYou can test it with different values of x, y and z.","kernel":"python3","pos":28,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"1b9df7","input":"## Dictionaries","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"40d436","input":"***Note***: this notebook contains cell with (a) solution. Remember ther is not only one soltuion to a problem!  \nYou will recognise these cells as they start with **# %**.  \nIf you would like to see the soltion, you will have to remove the **#** (which can be done by using **Ctrl** and **?**) and run the cell. If you want to run the solution code, you will have to run the cell again.","pos":1,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"422e5e","input":"**We can define our own functions with the keyword \"def\" followed by the name of the function and by parentheses with the parameter(s) inside.**  \n\nUsing the list **list_greeting**, we can define a **is_greeting** function which will decide if a string is a greeting or not.","pos":43,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"4a520a","input":"___\n## If - Elif - Else","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"637b34","input":"**We can access values using the keys between square brackets.**  \n>Get the greeting from Italy (use squre brackets).","pos":6,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"684141","input":"We can now check if **Ola** and **Yo** are greetings.","pos":48,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"6c0f4e","input":"# More Python basics","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"71093c","input":"**A dictionary is formed of value-key pairs, separated by commas, enclosed in curly brackets ( {} ).  \nThe key and the value are separated by a column ( : ), i.e. key:value.**","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b44eee","input":"___\n## Functions","pos":42,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e7a73f","input":"\nLet's write a short program with an ***if*** statement to help us decide if a name is long or not (6 is completely arbitrary ;-)).  \nWe have to respect blocks  of codes / indentation.","pos":24,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"f8992d","input":"**We can also add new key-value pairs.**  \n>Add the greeting of 'Hawaii' as 'Aloha'","pos":12,"state":"done","type":"cell"}
{"id":"df8bbf","input":"x=\ny=\nz=\n\nif\n\n","pos":28.5,"state":"done","type":"cell"}
{"id":"e6cab8","input":"# %load ../solutions/04_04.py","kernel":"python3","pos":28.75,"state":"done","type":"cell"}
{"id":0,"time":1588978575857,"type":"user"}
{"last_load":1588978574587,"type":"file"}